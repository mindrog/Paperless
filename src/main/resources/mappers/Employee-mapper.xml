<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 풀 패키지명을 namespace작성한다 그래야지만 mapper 인터페이스에서 함수 호출시 매핑해서 sql을 실행할 수 있다. -->
<mapper namespace="com.ss.paperless.employee.EmployeeMapper">
	<select id="getEmpInfo"
		parameterType="String"
		resultType="com.ss.paperless.employee.EmployeeDTO">
		select * from employee where emp_code = #{emp_code}
	</select>
	<select id="EmployeeById"
    parameterType="com.ss.paperless.employee.LoginDTO"
    resultType="com.ss.paperless.employee.EmployeeDTO">
    SELECT e.*, r.role_name
    FROM employee e
    LEFT JOIN employee_roles r ON e.emp_code = r.emp_code
    WHERE e.emp_code = #{username}
	</select>
	<select id="getUserPosi" parameterType="String"
		resultType="String">
		select posi_name from position join employee on position.posi_no = employee.emp_posi_no where employee.emp_code = #{emp_code};
	</select>
	<select id="existsByUsername" parameterType="String"
		resultType="int">
		SELECT EXISTS (
		SELECT 1
		FROM `User`
		WHERE `username` = '입력할_사용자이름'
		) AS user_exists
	</select>
	<select id="GetAdminUsers" 
		resultType="com.ss.paperless.company.CompanyDTO">
		select *
		from company
	</select>
	<update id="updateEmp" parameterType="Long">
		UPDATE Employee
		SET column_name = new_value
		WHERE id = #{id}
	</update>

	<!-- 조직도 조회 -->
	<select id="getEmpCompNo" parameterType="String" resultType="int">
		select emp_comp_no
		from employee
		where emp_code = #{emp_code}
	</select>

	<select id="getEmpMenuList" parameterType="int" resultType="com.ss.paperless.employee.EmployeeDTO">
		SELECT * FROM paperless.employee
		         WHERE emp_comp_no = #{emp_comp_no}
		         AND emp_role != 'super'
	</select>
	<select id="getEmpDepartMenuList" parameterType="int" resultType="com.ss.paperless.employee.EmployeeDTO">
		SELECT emp.emp_no, emp.emp_code , emp.emp_name, emp.emp_dept_no, dep.dept_name, dep.dept_team_name, pos.posi_name,
			   emp.emp_phone, emp.emp_email, emp.emp_profile, com.comp_name
		FROM paperless.employee emp
				 LEFT JOIN paperless.department dep ON emp.emp_dept_no = dep.dept_no
				 LEFT JOIN paperless.position pos ON emp.emp_posi_no = pos.posi_no
				 LEFT JOIN paperless.company com ON emp.emp_comp_no = com.comp_no
		WHERE emp_comp_no = #{emp_comp_no}
		AND emp_role != 'super'
	</select>

	<!-- 보고서 user Info 조회-->
	<select id="getUserInfo" parameterType="String" resultType="com.ss.paperless.employee.EmployeeDTO">
		SELECT emp.emp_no, emp.emp_code , emp.emp_name, emp.emp_dept_no, dep.dept_name, dep.dept_team_name, pos.posi_name,
			   emp.emp_phone, emp.emp_email, emp.emp_profile, com.comp_name
		FROM paperless.employee emp
				 LEFT JOIN paperless.department dep ON emp.emp_dept_no = dep.dept_no
				 LEFT JOIN paperless.position pos ON emp.emp_posi_no = pos.posi_no
				 LEFT JOIN paperless.company com ON emp.emp_comp_no = com.comp_no
		WHERE emp_code = #{emp_code}
	</select>
	<select id="GetDeptNamelist" resultType="String">
		select distinct dept_name from department limit 2, 100
	</select>
	
	<select id="GetTeamNameList" resultType="String">
		select dept_team_name from department where dept_name = #{dept_name}
	</select>

	<select id="GetDeptNo" resultType="int">
		select dept_no from department where dept_name = #{dept_name} and dept_team_name =#{dept_team_name}
	</select>
	
	<select id="GetPosition" resultType="com.ss.paperless.employee.PositionDTO">
		select * from position limit 2, 50
	</select>
	<select id="getEmps" parameterType="long" resultType="com.ss.paperless.employee.EmployeeDTO">
	select * from employee where emp_comp_no = #{emp_comp_no}
	</select>
	<insert id="userInsert" parameterType="com.ss.paperless.employee.EmployeeDTO">
	insert into employee (emp_code,emp_pw,emp_name,emp_email,emp_phone,emp_sign,emp_profile,emp_comp_no,emp_dept_no,emp_posi_no,emp_enroll_date,emp_join_date,emp_role)
		values (#{emp_code},#{emp_pw},#{emp_name},#{emp_email},#{emp_phone},#{emp_sign},#{emp_profile},#{emp_comp_no},#{emp_dept_no},#{emp_posi_no},sysdate(),sysdate(),#{emp_role})
	</insert>
	<!-- public String GetDeptName(Long emp_dept_no);

	public String GetPosiName(Long emp_posi_no);

	public String GetDeptTeamName(Long emp_dept_no); --> 
	
	<select id="GetDeptName" parameterType="Long" resultType="String">
		select dept_name from department where dept_no = #{emp_dept_no}
	</select>
	<select id="GetPosiName" parameterType="Long" resultType="String">
		select posi_name from position where posi_no = #{emp_posi_no}
	</select>
	<select id="GetDeptTeamName" parameterType="Long" resultType="String">
		select dept_team_name from department where dept_no = #{emp_dept_no}
	</select>
	<select id="empNameSearch" resultType="com.ss.paperless.employee.EmployeeDTO">
		select * from employee where emp_name like CONCAT('%', #{query}, '%') and emp_comp_no = ${comp_no}
	</select>
	<select id="empEmailSearch" resultType="com.ss.paperless.employee.EmployeeDTO">
		select * from employee where emp_email like CONCAT('%', #{query}, '%') and emp_comp_no = ${comp_no}
	</select>
	<select id="empDeptSearch" resultType="com.ss.paperless.employee.EmployeeDTO">
		SELECT 
   emp_no, 
   emp_code,
   emp_pw,
   emp_name,
   emp_email,
   emp_phone,
   emp_sign,
   emp_profile,
   emp_comp_no,
   emp_dept_no,
   emp_posi_no,
   emp_enroll_date, 
   emp_join_date,
   emp_role,
   dept_name, 
   dept_team_name, 
   posi_name
   
from 
    Employee e
join 
    Department d ON e.emp_dept_no = d.dept_no
join
	Position p on e.emp_posi_no = p.posi_no where (dept_name like CONCAT('%', #{query}, '%') or dept_team_name like CONCAT('%', #{query}, '%'))
	and e.emp_comp_no = ${comp_no}
	</select>
	<select id="empPosiSearch" resultType="com.ss.paperless.employee.EmployeeDTO">
		SELECT 
   emp_no, 
   emp_code,
   emp_pw,
   emp_name,
   emp_email,
   emp_phone,
   emp_sign,
   emp_profile,
   emp_comp_no,
   emp_dept_no,
   emp_posi_no,
   emp_enroll_date, 
   emp_join_date,
   emp_role,
   dept_name, 
   dept_team_name, 
   posi_name
   
from 
    Employee e
join 
    Department d ON e.emp_dept_no = d.dept_no
join
	Position p on e.emp_posi_no = p.posi_no where posi_name like CONCAT('%', #{query}, '%')
	and e.emp_comp_no = ${comp_no}
	</select>
	
	<delete id="DeleteEmp" parameterType="Long">
		delete from employee where emp_no = #{emp_no}
	</delete>
	<!-- emp_no: emp_no,
            emp_code: id,
            emp_name: name,
            emp_pw: password,
            emp_dept_no: departmentNumber,
            emp_posi_no: position,
            emp_email: email,
            emp_phone: contact -->
	<update id="userEdit" parameterType="com.ss.paperless.employee.EmployeeDTO">
		update employee set emp_code =#{emp_code},emp_name =#{emp_name},emp_pw =#{emp_pw}
		,emp_dept_no =#{emp_dept_no},emp_posi_no =#{emp_posi_no},
		emp_email =#{emp_email},emp_phone =#{emp_phone} where emp_no =#{emp_no}
	</update>

	<select id="findDeptNoByDeptAndTeamName" parameterType="map" resultType="Long">
		SELECT dept_no
		FROM department
		WHERE dept_name = #{deptName}
		<choose>
			<when test="teamName != null and teamName != ''">
				AND dept_team_name = #{teamName}
			</when>
		</choose>
		LIMIT 1
	</select>

</mapper>